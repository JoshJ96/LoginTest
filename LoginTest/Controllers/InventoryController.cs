using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using static LoginTest.DataAccess.Business_Logic.ProductProcessor;
using System.Web.Mvc;
using LoginTest.Models;

namespace LoginTest.Controllers
{
    public class InventoryController : Controller
    {
        public ActionResult ViewInventory()
        {
            return View(LoadProducts());
        }

        [HttpPost]
        public ActionResult ViewInventory(string searchInput)
        {
            //By default, return a list of products with search query
            var data = ProductSearch(searchInput);

            //However, if the search query is null or white space, return all products
            if (String.IsNullOrWhiteSpace(searchInput))
                {data = LoadProducts();}

            return View(data);
        }

        public ActionResult Modify()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Modify(string submit, Product product)
        {
            //Button clicked state machine
            switch (submit)
            {
                //Search button clicked
                case "Search":
                    //Take the number input and grab product from DB
                    if (ModelState.IsValidField("Number"))
                    {
                        product = GetByID(product.Number);
                        //var _product = GetProductFromID(product.Number);

                        if (product.Name != null)
                            ViewBag.Valid = "True";
                        if (product.Name == null)
                            ViewBag.Message = "The number entered didn't match any records";
                        
                    }
                    break;

                //Submit button clicked
                case "Submit Changes":

                    //Still show the table even upon reload
                    ViewBag.Valid = "True";
                    //This function will execute only if the modified details are valid
                    if (ModelState.IsValid)
                    {
                        //SQL MODIFY FUNCTION
                        int recordsAffected = ModifyProduct(product);

                        ViewBag.State = "Success";
                    }
                    break;
                default:
                    break;
            }
            return View(product);
        }

        public ActionResult Add()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Add(string submit, Product product)
        {
            //Parameters to check (the reason we do this is because the number is not generated by the user)
            List<string> stringsToCheck = new List<string>
                { "Name", "Location", "Quantity", "Price", "Brand" };

            foreach (string item in stringsToCheck)
            {
                //If one field is wrong, we do not move forward
                if (!ModelState.IsValidField(item))
                {
                    return View();
                }
            }

        //Only add to database if physical button is clicked, no refreshes etc.
        if (submit == "Add Product")
        {
            //SQL Create Product
            CreateProduct(product.Name, product.Location, product.Quantity, product.Price, product.Brand);

            //After that, retrieve the product so that we can tell the user the product number information
            product = GetByAllButNumber(product.Name, product.Location, product.Quantity, product.Price, product.Brand);
            ViewBag.State = "Success";
            ViewBag.ProductID = product.Number;
            ViewBag.ProductName = product.Name;
                Product emptyproduct = new Product();
                return View(emptyproduct);
        }

        return View(product);
        }
    }
}